Course: COMPSCI 260
Name: Liane Yanglian
NetID: xy48
Problem: 3
Problem Set: 1
Due: Fri 16 Sep 2016, 5pm
Using free extension (yes/no): yes

Statement of collaboration and resources used (put None if you worked 
entirely without collaboration or resources; otherwise cite carefully):
I got help from the TA Lydia. I also consulted these resources: http://stackoverflow.com/questions/18749059/concatenate-strings-if-they-have-an-overlapping-region and http://www.nature.com/nsmb/journal/v23/n5/full/nsmb.3213.html and https://microbewiki.kenyon.edu/index.php/Zika_virus
My solutions and comments for this problem are below.
-----------------------------------------------------
a) Given an arbitrary number of reads of a certain average length, to assemble them into a longer, continuous sequence, I would find the first sequence, in the sense that its first items do not overlap with any other sequence's end items. Then I will find the next one by finding which sequence's first i items overlap with this first sequence's end i items. Then I will concatenate the two sequences and take out the overlap, and then find the next one whose first i items correspond with this concatenated sequence's end items. If the degree to which each sequence overlaps with another is different, then that would make this endeavor more challenging. An algorithm might deal with these potential obstacles by searching for how much each item overlaps with the next item, and then concatenate them accordingly. My approach would work with any number of reads and average length, but it would need to change if the degree to which the reads overlap is different from one sequence pair to another. My thinking might be influenced by knowing about the genome from which the reads were generated that each read has the same number of overlaps with another read, or ther are a certain number of reads in a genome.
b) There are 10794 nucleotides in the RNA sequence. This makes sense given the lengths of the original sequences because since the average length of each read is approximately 500 base pairs, and each read overlaps the start of another read by exactly 20 base pairs, the length of the reassembled RNA sequence should be around: 20*500 - (20-1)*20 = 9620, which is close to the actual result, 10794.
c) I find 2 ORFs and their lengths are 166 and 10256. Yes, there exist ORFs that overlap other ORFs, since the second ORF is entirely contained within the first one, because its start codon index is bigger than that of the first one and its stop index is smaller than that of the first one. The fraction of the genome that is coding is 0.950157494905.
d) Taking the sequence of the largest ORF and translating it into an amino acid sequence, I find that this is a flavivirus polyprotein. It belongs to the organism Zika Virus. Yes, it is subject to post translational modification. It is initially translated as a single polyprotein which is then cleaved post-translationally into three strutural proteins (C, PrM or M, and E) and seven nonstructural (NS) proteins (NS1, NS2A, NS2B, NS3, NS4A, NS4B, and NS5). The structure of this protein follows that of other flaviviruses. It contains a nucleocapsid about 25-30 nm in diameter surrounded by a host-membrane derived lipid bilayer that contains envelope proteins E and M. The virion is approximately 40 nm in diameter with surface projections that measure about 5-10 nm. The surface proteins are arranged in an icosohedral-like symmetry. Six of the NS proteins (NS2A to NS5) form a replication complex on the cytoplasmic side of the endoplasmic reticulum membrane. The glycosylated NS1, which associates with lipids, forms a homodimer inside the cells. NS1 is also secreted into the extracellular space as hexameric lipoprotein particle. The protein supports the Zika Virus similarly to how other known flaviviruses support the organisms in which they are found. First, the virion attaches to the host cell membrane (the Zika virus is in the host cell) receptors via the envelope protein which induces virion endocytosis. Next, the virus membrane fuses with the endosomal membrane and the ssRNA genome of the virus is released into the cytoplasm of the host cell. It is then translated into a polyprotein that is subsequently cleaved to form all structural and nonstructural proteins. Replication takes place at intracellular compartments known as cytoplasmic viral factories in the endoplasmic reticulum resulting in a double-stranded RNA genome. The dsRNA genome is transcribed resulting in addtional ssRNA genomes. Then assembly occurs within the endoplasmic reticulum and the new virions are transported to the Golgi apparatus and then excreted into the intracellular space where the new virions can infect new host cells.  

How my solution works: 

Since I call on orfs in ssRNA.py, I wrote some code in the ssRNA.py and added some to orfs.py.

I start by creating a list and append all the reads into the list. Then, I make a dictionary with the first twenty nucleotides as the key and the rest of the nucleotide as the values of each read. I then make a set of the last twenty nucleotides of each read. Afterwards I search through the the keys of the library I created named "sequences", taking the first sequence's first twenty nucleotides as the first value. I use a while loop to indicate that while this aforementioned value (the last twenty nucleotides of a read) corresponds to some read's frist twenty nucleotides of some read, the loop will run. While the condition is true, I append the corresponding value to the key "firstchars" in the library to the "newsequence", which will eventually be the reassembled RNA. I then update firstchars to be the last twenty nucleotides of the same read, and eventually join the newsequence to get the answer.
In the orf.py, I just added what's needed to print out the number of ORFs found, the largest ORF in this case, and the lengths of the ORFs, as well as the friction of the genome that is coding.

Short transcript of the program in operation (I took out that for Problem 2 for ease of viewing):

The number of nucleotides in the RNA sequence I assemble is 10794
(only for Problem 3), largest ORF  is MKNPKEEIRRIRIVNMLKRGVARVNPLGGLKRLPAGLLLGHGPIRMVLAILAFLRFTAIKPSLGLINRWGSVGKKEAMEIIKKFKKDLAAMLRIINARKERKRRGADTSIGIIGLLLTTAMAAEITRRGSAYYMYLDRSDAGKAISFATTLGVNKCHVQIMDLGHMCDATMSYECPMLDEGVEPDDVDCWCNTTSTWVVYGTCHHKKGEARRSRRAVTLPSHSTRKLQTRSQTWLESREYTKHLIKVENWIFRNPGFALVAVAIAWLLGSSTSQKVIYLVMILLIAPAYSIRCIGVSNRDFVEGMSGGTWVDVVLEHGGCVTVMAQDKPTVDIELVTTTVSNMAEVRSYCYEASISDMASDSRCPTQGEAYLDKQSDTQYVCKRTLVDRGWGNGCGLFGKGSLVTCAKFTCSKKMTGKSIQPENLEYRIMLSVHGSQHSGMIGYETDEDRAKVEVTPNSPRAEATLGGFGSLGLDCEPRTGLDFSDLYYLTMNNKHWLVHKEWFHDIPLPWHAGADTGTPHWNNKEALVEFKDAHAKRQTVVVLGSQEGAVHTALAGALEAEMDGAKGRLFSGHLKCRLKMDKLRLKGVSYSLCTAAFTFTKVPAETLHGTVTVEVQYAGTDGPCKIPVQMAVDMQTLTPVGRLITANPVITESTENSKMMLELDPPFGDSYIVIGVGDKKITHHWHRSGSTIGKAFEATVRGAKRMAVLGDTAWDFGSVGGVFNSLGKGIHQIFGAAFKSLFGGMSWFSQILIGTLLVWLGLNTKNGSISLTCLALGGVMIFLSTAVSADVGCSVDFSKKETRCGTGVFIYNDVEAWRDRYKYHPDSPRRLAAAVKQAWEEGICGISSVSRMENIMWKSVEGELNAILEENGVQLTVVVGSVKNPMWRGPQRLPVPVNELPHGWKAWGKSYFVRAAKTNNSFVVDGDTLKECPLEHRAWNSFLVEDHGFGVFHTSVWLKVREDYSLECDPAVIGTAVKGREAAHSDLGYWIESEKNDTWRLKRAHLIEMKTCEWPKSHTLWTDGVEESDLIIPKSLAGPLSHHNTREGYRTQVKGPWHSEELEIRFEECPGTKVYVEETCGTRGPSLRSTTASGRVIEEWCCRECTMPPLSFRAKDGCWYGMEIRPRKEPESNLVRSMVTAGSTDHMDHFSLGVLVILLMVQEGLKKRMTTKIIMSTSMAVLVVMILGGFSMSDLAKLVILMGATFAEMNTGGDVAHLALVAAFKVRPALLVSFIFRANWTPRESMLLALASCLLQTAISALEGDLMVLINGFALAWLAIRAMAVPRTDNIALPILAALTPLARGTLLVAWRAGLATCGGIMLLSLKGKGSVKKNLPFVMALGLTAVRVVDPINVVGLLLLTRSGKRSWPPSEVLTAVGLICALAGGFAKADIEMAGPMAAVGLLIVSYVVSGKSVDMYIERAGDITWEKDAEVTGNSPRLDVALDESGDFSLVEEDGPPMREIILKVVLMAICGMNPIAIPFAAGAWYVYVKTGKRSGALWDVPAPKEVKKGETTDGVYRVMTRRLLGSTQVGVGVMQEGVFHTMWHVTKGAALRSGEGRLDPYWGDVKQDLVSYCGPWKLDAAWDGLSEVQLLAVPPGERARNIQTLPGIFKTKDGDIGAVALDYPAGTSGSPILDKCGRVIGLYGNGVVIKNGSYVSAITQGKREEETPVECFEPSMLKKKQLTVLDLHPGAGKTRRVLPEIVREAIKKRLRTVILAPTRVVAAEMEEALRGLPVRYMTTAVNVTHSGTEIVDLMCHATFTSRLLQPIRVPNYNLNIMDEAHFTDPSSIAARGYISTRVEMGEAAAIFMTATPPGTRDAFPDSNSPIMDTEVEVPERAWSSGFDWVTDHSGKTVWFVPSVRNGNEIAACLTKAGKRVIQLSRKTFETEFQKTKNQEWDFVITTDISEMGANFKADRVIDSRRCLKPVILDGERVILAGPMPVTHASAAQRRGRIGRNPNKPGDEYMYGGGCAETDEGHAHWLEARMLLDNIYLQDGLIASLYRPEADKVAAIEGEFKLRTEQRKTFVELMKRGDLPVWLAYQVASAGITYTDRRWCFDGTTNNTIMEDSVPAEVWTKYGEKRVLKPRWMDARVCSDHAALKSFKEFAAGKRGAALGVMEALGTLPGHMTERFQEAIDNLAVLMRAETGSRPYKAAAAQLPETLETIMLLGLLGTVSLGIFFVLMRNKGIGKMGFGMVTLGASAWLMWLSEIEPARIACVLIVVFLLLVVLIPEPEKQRSPQDNQMAIIIMVAVGLLGLITANELGWLERTKNDIAHLMGRREEGATMGFSMDIDLRPASAWAIYAALTTLITPAVQHAVTTSYNNYSLMAMATQAGVLFGMGKGMPFMHGDLGVPLLMMGCYSQLTPLTLIVAIILLVAHYMYLIPGLQAAAARAAQKRTAAGIMKNPVVDGIVVTDIDTMTIDPQVEKKMGQVLLIAVAISSAVLLRTAWGWGEAGALITAATSTLWEGSPNKYWNSSTATSLCNIFRGSYLAGASLIYTVTRNAGLVKRRGGGTGETLGEKWKARLNQMSALEFYSYKKSGITEVCREEARRALKDGVATGGHAVSRGSAKIRWLEERGYLQPYGKVVDLGCGRGGWSYYAATIRKVQEVRGYTKGGPGHEEPMLVQSYGWNIVRLKSGVDVFHMAAEPCDTLLCDIGESSSSPEVEETRTLRVLSMVGDWLEKRPGAFCIKVLCPYTSTMMETMERLQRRHGGGLVRVPLCRNSTHEMYWVSGAKSNIIKSVSTTSQLLLGRMDGPRRPVKYEEDVNLGSGTRAVASCAEAPNMKIIGRRIERIRNEHAETWFLDENHPYRTWAYHGSYEAPTQGSASSLVNGVVRLLSKPWDVVTGVTGIAMTDTTPYGQQRVFKEKVDTRVPDPQEGTRQVMNIVSSWLWKELGKRKRPRVCTKEEFINKVRSNAALGAIFEEEKEWKTAVEAVNDPRFWALVDREREHHLRGECHSCVYNMMGKREKKQGEFGKAKGSRAIWYMWLGARFLEFEALGFLNEDHWMGRENSGGGVEGLGLQRLGYILEEMNRAPGGKMYADDTAGWDTRISKFDLENEALITNQMEEGHRTLALAVIKYTYQNKVVKVLRPAEGGKTVMDIISRQDQRGSGQVVTYALNTFTNLVVQLIRNMEAEEVLEMQDLWLLRKPEKVTRWLQSNGWDRLKRMAVSGDDCVVKPIDDRFAHALRFLNDMGKVRKDTQEWKPSTGWSNWEEVPFCSHHFNKLYLKDGRSIVVPCRHQDELIGRARVSPGAGWSIRETACLAKSYAQMWQLLYFHRRDLRLMANAICSAVPVDWVPTGRTTWSIHGKGEWMTTEDMLMVWNRVWIEENDHMEDKTPVTKWTDIPYLGKREDLWCGSLIGHRPRTTWAENIKDTVNMVRRIIGDEEKYMDYLSTQVRYLGEEGSTPGV
(only for Problem 3) The length of the ORF is 266
(only for Problem 3) The length of the ORF is 10256
(only for Problem 3), the friction of the genome that is coding is, 0.950157494905
The number of ORFS the procedure finds is: 2
The list of ORFs is [{'nnlength': 267, 'frame': 0, 'stop': 3686, 'aalength': 89, 'start': 3420, 'length': 266, 'stopcodon': 'UGA', 'strand': '+'}, {'nnlength': 10257, 'frame': 2, 'stop': 10362, 'aalength': 3419, 'start': 106, 'length': 10256, 'stopcodon': 'UAA', 'strand': '+'}]
